import React, { useEffect, useState } from "react";
import { motion } from "framer-motion";
import { useLocation } from "react-router";
import { FcRules } from "react-icons/fc";
import { FaArrowDown } from "react-icons/fa6";
import { FaArrowUp } from "react-icons/fa";

const Rules = () => {
  const rules = [
    "‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ‡¶∞ ‡¶π‡¶æ‡¶ú‡¶ø‡¶∞‡¶æ, ‡¶Ü‡¶™‡¶§‡ßç‡¶§‡¶ø(‡¶™‡¶ø‡¶ü‡¶ø‡¶∂‡¶®), ‡¶∏‡¶Æ‡ßü‡ßá‡¶∞ ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ì ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶Ü‡¶¨‡ßá‡¶¶‡¶®‡¶∏‡¶Æ‡ßÇ‡¶π ‡¶ß‡¶æ‡¶∞‡ßç‡¶Ø ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßß‡ßß.‡ß¶‡ß¶ ‡¶ò‡¶ü‡¶ø‡¶ï‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ï‡ßã‡¶∞‡ßç‡¶ü‡ßá ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
    "‡¶´‡¶æ‡¶á‡¶≤‡¶ø‡¶Ç ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶ì‡¶ï‡¶æ‡¶≤‡¶§‡¶®‡¶æ‡¶Æ‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶Ø‡ßá ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ‡¶∞ ‡¶Ü‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∞‡ßÅ‡¶¶‡ßç‡¶ß‡ßá ‡¶Ü‡¶™‡¶ø‡¶≤/‡¶∞‡¶ø‡¶≠‡¶ø‡¶∂‡¶® ‡¶¶‡¶æ‡ßü‡ßá‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶§‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶æ‡¶á‡¶∞‡ßç‡¶° ‡¶ï‡¶™‡¶ø ‡¶¶‡¶æ‡¶ñ‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
    "‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ‡¶∞ ‡¶´‡¶æ‡¶á‡¶≤‡¶ø‡¶Ç ‡¶ì ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø‡¶§‡¶∞‡ßç‡¶ï ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßß‡ß¶.‡ß©‡ß¶ ‡¶ò‡¶ü‡¶ø‡¶ï‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
    "‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ ‡¶´‡¶æ‡¶á‡¶≤‡¶ø‡¶Ç ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßü ‡ßß‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡ßã‡¶∞‡ßç‡¶ü ‡¶´‡¶ø ‡¶ì ‡ß® ‡¶∏‡ßá‡¶ü ‡¶´‡¶ü‡ßã‡¶ï‡¶™‡¶ø ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
    "‡¶Ø‡ßá ‡¶ï‡ßã‡¶® ‡¶™‡¶ø‡¶ü‡¶ø‡¶∂‡¶® ‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡ß®‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡ßã‡¶∞‡ßç‡¶ü ‡¶´‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶∞‡ßã‡¶ú‡¶ø‡¶®‡¶æ (‡¶Æ‡¶æ‡¶Æ‡¶≤‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶æ‡¶¶‡ßÄ‡¶∞ ‡¶®‡ßã‡¶ü‡¶ø‡¶∂) ‡ßß‡¶Æ ‡¶ú‡¶® ‡ßß‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ú‡¶® ‡ß´ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
    "‡¶®‡ßã‡¶ü‡¶ø‡¶∂‡ßá ‡¶®‡¶æ‡¶Æ, ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶ì ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá, ‡¶ñ‡¶æ‡¶Æ ‡¶ì AD Blank ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
    "‡¶Ø‡ßá ‡¶ï‡ßã‡¶® ‡¶™‡¶ø‡¶ü‡¶ø‡¶∂‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡ß® ‡¶∏‡ßá‡¶ü ‡¶´‡¶ü‡ßã‡¶ï‡¶™‡¶ø ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
  ];

  const location = useLocation();
  const [openId, setOpenId] = useState("");
  const [showAll, setShowAll] = useState(false); // üåü Toggle state

  // Scroll into view if hash in URL
  useEffect(() => {
    if (location.hash) {
      const id = location.hash.replace("#", "");
      setOpenId(id);
      const element = document.getElementById(id);
      if (element) {
        setTimeout(() => {
          element.scrollIntoView({ behavior: "smooth", block: "start" });
        }, 100);
      }
    }
  }, [location]);

  return (
    <motion.div
      id="rules"
      style={{ scrollMarginTop: "80px" }}
      initial={{ opacity: 0, y: 30 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6 }}
      className="bg-gray-100 shadow-md mx-auto p-2 md:p-6 rounded-b-lg"
    >
      <div className="flex items-center justify-center my-6 gap-3">
        <h2 className="font-bold text-[#004080] text-xl md:text-3xl text-center">‡¶Ü‡¶¶‡¶æ‡¶≤‡¶§‡ßá‡¶∞ ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ</h2>
        <FcRules className="text-5xl" />
      </div>

      <ul className="space-y-4 px-4 list-none">
        {(showAll ? rules : rules.slice(0, 3)).map((rule, index) => (
          <motion.li
            key={index}
            className="flex items-start text-gray-700 text-md md:text-lg"
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.05 }}
          >
            <span className="mr-2 text-[#004080] text-xl">‚û§</span>
            <span>{rule}</span>
          </motion.li>
        ))}
      </ul>

      <div className="mt-6 cursor-pointer text-center w-full  items-center flex justify-center">
        <button
          onClick={() => setShowAll(!showAll)}
          className="text-blue-800 flex flex-col cursor-pointer items-center justify-center  text-base hover:underline font-medium"
        >
          {showAll ? "‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®" : "‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®"}
          {showAll? <FaArrowUp />:      <FaArrowDown />}
     
        </button>
      </div>
    </motion.div>
  );
};

export default Rules;
